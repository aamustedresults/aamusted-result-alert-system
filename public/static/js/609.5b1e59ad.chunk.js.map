{"version":3,"file":"static/js/609.5b1e59ad.chunk.js","mappings":"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","sources":["components/modals/AddDepartment.js","components/tabs/DepartmentTab.js","components/modals/AddProgramme.js","components/tabs/ProgrammeTab.js","components/modals/AddCourse.js","components/tabs/CourseTab.js","../node_modules/@mui/icons-material/esm/House.js","../node_modules/@mui/icons-material/esm/CodeSharp.js","../node_modules/@mui/icons-material/esm/CalendarTodaySharp.js","pages/Department.js","../node_modules/@mui/icons-material/esm/Add.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Stack,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport HouseSidingIcon from \"@mui/icons-material/HouseSiding\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport { addDepartment } from \"../api/departmentApi\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction AddDepartment({ open, setOpen }) {\r\n  const { palette } = useTheme();\r\n  const queryClient = useQueryClient();\r\n  const initialValues = {\r\n    id: \"\",\r\n    department: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    department: Yup.string().trim().required(),\r\n  });\r\n\r\n  const departmentMutate = useMutation(addDepartment);\r\n\r\n  const onSubmit = (values, options) => {\r\n    options.setSubmitting(true);\r\n    departmentMutate.mutateAsync(values, {\r\n      onSuccess: (data) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          iconColor: palette.primary.main,\r\n          title: \"Success\",\r\n          text: \"New Department addeed!!!\",\r\n          confirmButtonColor: palette.primary.main,\r\n        });\r\n        queryClient.invalidateQueries(\"department\");\r\n      },\r\n      onError: (v, error, cb) => {\r\n        console.log(error);\r\n      },\r\n      onSettled: () => {\r\n        options.setSubmitting(false);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      tabIndex=\"-1\"\r\n    >\r\n      <DialogTitle title=\"Add Department\">\r\n        <HouseSidingIcon />\r\n        Add Department\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formik) => (\r\n          <>\r\n            <DialogContent>\r\n              <Stack paddingTop={2}>\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  label=\"Department\"\r\n                  size=\"sm\"\r\n                  fullWidth\r\n                  value={formik.values.department}\r\n                  onChange={formik.handleChange(\"department\")}\r\n                  onBlur={formik.handleBlur(\"department\")}\r\n                  error={formik.touched.department && formik.errors.department}\r\n                  helperText={formik.errors.department}\r\n                />\r\n              </Stack>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <LoadingButton\r\n                variant=\"contained\"\r\n                loading={formik.isSubmitting}\r\n                onClick={formik.handleSubmit}\r\n                sx={{\r\n                  minWidth: 100,\r\n                }}\r\n              >\r\n                Save\r\n              </LoadingButton>\r\n              <Button color=\"secondary\" onClick={() => setOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddDepartment;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport CustomTable from \"../tables/CustomTable\";\r\nimport AddDepartment from \"../modals/AddDepartment\";\r\nimport { departmentColumns } from \"../data/columns\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getAllDepartments } from \"../api/departmentApi\";\r\nimport { CustomContext } from \"../context/provider/CustomProvider\";\r\n\r\nfunction DepartmentTab() {\r\n  const { customDispatch } = useContext(CustomContext);\r\n\r\n  const departmentData = useQuery([\"department\"], getAllDepartments, {\r\n    onSuccess: (data) => {\r\n      customDispatch({ type: \"departOptions\", payload: data });\r\n    },\r\n  });\r\n\r\n  const [openAddDepartment, setOpenAddDepartment] = useState(false);\r\n  return (\r\n    <section>\r\n      <Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            sx={{ color: \"#fff\" }}\r\n            onClick={() => setOpenAddDepartment(true)}\r\n            startIcon={<Add />}\r\n          >\r\n            Add New Department\r\n          </Button>\r\n        </Box>\r\n        <CustomTable\r\n          isLoading={departmentData.isLoading}\r\n          heading=\"Department\"\r\n          columns={departmentColumns}\r\n          data={departmentData.data}\r\n          showResultsButton={false}\r\n          refresh={departmentData.refetch}\r\n        />\r\n      </Box>\r\n      <AddDepartment open={openAddDepartment} setOpen={setOpenAddDepartment} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default DepartmentTab;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Stack,\r\n  Autocomplete,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport { addProgramme } from \"../api/programmeApi\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { CustomContext } from \"../context/provider/CustomProvider\";\r\n\r\nfunction AddProgramme({ open, setOpen }) {\r\n  const { palette } = useTheme();\r\n  const { customState } = useContext(CustomContext);\r\n  const queryClient = useQueryClient();\r\n\r\n  const [depart, setDepart] = useState([]);\r\n  const [department, setDepartment] = useState(null);\r\n  const [programme, setProgramme] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let departOptions = [];\r\n    customState.departmentOptions.forEach((data, index) => {\r\n      departOptions.push(data.department);\r\n    });\r\n\r\n    setDepart(departOptions);\r\n  }, [customState.departmentOptions]);\r\n\r\n  const initialValues = {\r\n    id: \"\",\r\n    programme,\r\n    department: department,\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    department: Yup.string().trim().required().nullable(true),\r\n    programme: Yup.string().trim().required(),\r\n  });\r\n\r\n  const programmeMutate = useMutation(addProgramme);\r\n\r\n  const onSubmit = (values, options) => {\r\n    options.setSubmitting(true);\r\n\r\n    programmeMutate.mutateAsync(values, {\r\n      onSuccess: (data) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          iconColor: palette.primary.main,\r\n          title: \"Success\",\r\n          text: \"New Programme addeed!!!\",\r\n          confirmButtonColor: palette.primary.main,\r\n        });\r\n        queryClient.invalidateQueries(\"programme\");\r\n      },\r\n      onError: (v, error, cb) => {\r\n        console.log(error);\r\n      },\r\n      onSettled: () => {\r\n        options.setSubmitting(false);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={() => setOpen(false)}>\r\n      <DialogTitle title=\"Add Department\">Add Programme</DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize={true}\r\n      >\r\n        {({\r\n          isSubmitting,\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleSubmit,\r\n          handleBlur,\r\n        }) => (\r\n          <>\r\n            <DialogContent>\r\n              <Stack paddingTop={2} rowGap={3}>\r\n                <Autocomplete\r\n                  id=\"department\"\r\n                  disablePortal\r\n                  size=\"small\"\r\n                  options={depart}\r\n                  value={department}\r\n                  onChange={(e, value) => setDepartment(value)}\r\n                  renderInput={(props) => (\r\n                    <TextField\r\n                      variant=\"filled\"\r\n                      label=\"Select Department\"\r\n                      size=\"small\"\r\n                      placeholder=\"Select Department\"\r\n                      fullWidth\r\n                      {...props}\r\n                      error={Boolean(touched.department && errors.department)}\r\n                      helperText={errors.department}\r\n                      autoFocus\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  label=\"Programme\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  id=\"programe\"\r\n                  placeholder=\"Enter Programme here\"\r\n                  value={values.programme}\r\n                  onChange={(e, value) => setProgramme(e.currentTarget.value)}\r\n                  error={Boolean(touched.programme && errors.programme)}\r\n                  helperText={errors.programme}\r\n                />\r\n              </Stack>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <LoadingButton\r\n                loading={isSubmitting}\r\n                onClick={handleSubmit}\r\n                sx={{ minWidth: 100 }}\r\n                variant=\"contained\"\r\n              >\r\n                Save\r\n              </LoadingButton>\r\n              <Button color=\"secondary\" onClick={() => setOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddProgramme;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button, Box } from \"@mui/material\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport CustomTable from \"../tables/CustomTable\";\r\nimport AddProgramme from \"../modals/AddProgramme\";\r\nimport { programmeColumns } from \"../data/columns\";\r\n\r\nimport { useQuery } from \"react-query\";\r\nimport { getAllProgrammes } from \"../api/programmeApi\";\r\nimport { CustomContext } from \"../context/provider/CustomProvider\";\r\n\r\nfunction ProgrammeTab() {\r\n  const { customDispatch } = useContext(CustomContext);\r\n  const [openAddProgramme, setOpenAddProgramme] = useState(false);\r\n\r\n  const programmeData = useQuery([\"programme\"], getAllProgrammes, {\r\n    onSuccess: (data) => {\r\n      customDispatch({ type: \"progOptions\", payload: data });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <Box>\r\n          <Box display=\"flex\" justifyContent=\"flex-end\">\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              sx={{ color: \"#fff\" }}\r\n              onClick={() => setOpenAddProgramme(true)}\r\n              startIcon={<Add />}\r\n            >\r\n              Add New Programme\r\n            </Button>\r\n          </Box>\r\n          <CustomTable\r\n            heading=\"Programme\"\r\n            columns={programmeColumns}\r\n            data={programmeData.data}\r\n            refresh={programmeData.refetch}\r\n          />\r\n        </Box>\r\n      </section>\r\n      <AddProgramme open={openAddProgramme} setOpen={setOpenAddProgramme} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProgrammeTab;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Stack,\r\n  TextField,\r\n  Autocomplete,\r\n  useTheme,\r\n\r\n} from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport { addCourse } from \"../api/courseApi\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { CustomContext } from \"../context/provider/CustomProvider\";\r\nfunction AddCourse({ open, setOpen }) {\r\n  const { customState } = useContext(CustomContext);\r\n  const { palette } = useTheme();\r\n  const queryClient = useQueryClient();\r\n\r\n  const [prog, setProg] = useState([]);\r\n  const [programme, setProgramme] = useState(null);\r\n  const [code, setCode] = useState(\"\");\r\n  const [course, setCourse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let progOptions = [];\r\n\r\n    customState.programmeOptions.forEach((data, index) => {\r\n      progOptions.push(data.programme);\r\n    });\r\n\r\n    setProg(progOptions);\r\n  }, [customState.programmeOptions]);\r\n\r\n  const initialValues = {\r\n    id: \"\",\r\n    programme,\r\n    code,\r\n    course,\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    programme: Yup.string().trim().required().nullable(true),\r\n    code: Yup.string().trim().required(),\r\n    course: Yup.string().trim().required(),\r\n  });\r\n\r\n  const courseMutate = useMutation(addCourse);\r\n\r\n  const onSubmit = (values, options) => {\r\n    options.setSubmitting(true);\r\n\r\n    courseMutate.mutateAsync(values, {\r\n      onSuccess: (data) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          iconColor: palette.primary.main,\r\n          title: \"Success\",\r\n          text: \"New Course addeed!!!\",\r\n          confirmButtonColor: palette.primary.main,\r\n        });\r\n        queryClient.invalidateQueries(\"course\");\r\n      },\r\n      onError: (v, error, cb) => {\r\n        console.log(error);\r\n      },\r\n      onSettled: () => {\r\n        options.setSubmitting(false);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={() => setOpen(false)}>\r\n      <DialogTitle title=\"Add New Course\">\r\n        <ListAltIcon />\r\n        Add New Course\r\n      </DialogTitle>\r\n    \r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize={true}\r\n      >\r\n        {({\r\n          isSubmitting,\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleSubmit,\r\n          handleBlur,\r\n        }) => (\r\n          <>\r\n            <DialogContent>\r\n              <Stack paddingTop={2} rowGap={2}>\r\n                <Autocomplete\r\n                  id=\"programme\"\r\n                  disablePortal\r\n                  size=\"small\"\r\n                  options={prog}\r\n                  value={programme}\r\n                  onChange={(e, value) => setProgramme(value)}\r\n                  renderInput={(props) => (\r\n                    <TextField\r\n                      variant=\"filled\"\r\n                      label=\"Select Programme\"\r\n                      size=\"small\"\r\n                      placeholder=\"Select Programme\"\r\n                      fullWidth\r\n                      {...props}\r\n                      error={Boolean(touched.programme && errors.programme)}\r\n                      helperText={errors.programme}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  label=\"Course Code\"\r\n                  id=\"code\"\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Course Code here\"\r\n                  fullWidth\r\n                  value={values.code}\r\n                  onChange={(e, value) => setCode(e.currentTarget.value)}\r\n                  error={Boolean(touched.code && errors.code)}\r\n                  helperText={errors.code}\r\n                />\r\n\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  label=\"Course\"\r\n                  id=\"course\"\r\n                  size=\"small\"\r\n                  placeholder=\"Enter Course here\"\r\n                  fullWidth\r\n                  value={values.course}\r\n                  onChange={(e, value) => setCourse(e.currentTarget.value)}\r\n                  error={Boolean(touched.course && errors.course)}\r\n                  helperText={errors.course}\r\n                />\r\n              </Stack>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <LoadingButton\r\n                variant=\"contained\"\r\n                loading={isSubmitting}\r\n                onClick={handleSubmit}\r\n              >\r\n                Save\r\n              </LoadingButton>\r\n              <Button color=\"secondary\" onClick={() => setOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddCourse;\r\n","import React, { useState } from \"react\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport CustomTable from \"../tables/CustomTable\";\r\nimport AddCourse from \"../modals/AddCourse\";\r\nimport { courseColumns } from \"../data/columns\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getAllCourses } from \"../api/courseApi\";\r\n\r\nfunction CourseTab() {\r\n  const courseData = useQuery([\"course\"], getAllCourses);\r\n\r\n  const [openAddCourse, setOpenAddCourse] = useState(false);\r\n  return (\r\n    <section>\r\n      <Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            sx={{ color: \"#fff\" }}\r\n            onClick={() => setOpenAddCourse(true)}\r\n            startIcon={<Add />}\r\n          >\r\n            Add New Course\r\n          </Button>\r\n        </Box>\r\n        <CustomTable\r\n          isLoading={courseData.isLoading}\r\n          heading=\"Course\"\r\n          columns={courseColumns}\r\n          data={courseData.data}\r\n          refresh={courseData.refetch}\r\n        />\r\n      </Box>\r\n      <AddCourse open={openAddCourse} setOpen={setOpenAddCourse} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CourseTab;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9.3V4h-3v2.6L12 3 2 12h3v8h5v-6h4v6h5v-8h3l-3-2.7zm-9 .7c0-1.1.9-2 2-2s2 .9 2 2h-4z\"\n}), 'House');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"\n}), 'CodeSharp');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 3h-3V1h-2v2H7V1H5v2H2v20h20V3zm-2 18H4V8h16v13z\"\n}), 'CalendarTodaySharp');","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Divider,\r\n  Typography,\r\n  Tab,\r\n  Link,\r\n} from \"@mui/material\";\r\nimport Content from \"../components/Content\";\r\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\nimport DepartmentTab from \"../components/tabs/DepartmentTab\";\r\nimport ProgrammeTab from \"../components/tabs/ProgrammeTab\";\r\nimport CourseTab from \"../components/tabs/CourseTab\";\r\nimport { CalendarTodaySharp, CodeSharp, House } from \"@mui/icons-material\";\r\n\r\nfunction Department() {\r\n  const [tab, setTab] = React.useState(\"1\");\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Results System | Department</title>\r\n      </Helmet>\r\n\r\n      <section className=\"department-container\">\r\n        <Content>\r\n          <section>\r\n            <Typography variant=\"h4\">Department</Typography>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Breadcrumbs>\r\n                <Link>Home</Link>\r\n                <Typography>Department</Typography>\r\n              </Breadcrumbs>\r\n            </Box>\r\n            <Divider />\r\n\r\n            <TabContext value={tab}>\r\n              <TabList\r\n                onChange={(e, newtab) => setTab(newtab)}\r\n                aria-label=\"department tabs\"\r\n                centered\r\n              >\r\n                <Tab\r\n                  label=\"Department\"\r\n                  value=\"1\"\r\n                  icon={<House />}\r\n                  iconPosition=\"start\"\r\n                />\r\n                <Tab\r\n                  label=\"Programme\"\r\n                  value=\"2\"\r\n                  icon={<CodeSharp />}\r\n                  iconPosition=\"start\"\r\n                />\r\n                <Tab\r\n                  label=\"Course\"\r\n                  value=\"3\"\r\n                  icon={<CalendarTodaySharp />}\r\n                  iconPosition=\"start\"\r\n                />\r\n              </TabList>\r\n\r\n              <TabPanel value=\"1\">\r\n                <DepartmentTab />\r\n              </TabPanel>\r\n              <TabPanel value=\"2\">\r\n                <ProgrammeTab />\r\n              </TabPanel>\r\n              <TabPanel value=\"3\">\r\n                <CourseTab />\r\n              </TabPanel>\r\n            </TabContext>\r\n          </section>\r\n        </Content>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Department;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"names":["open","setOpen","palette","useTheme","queryClient","useQueryClient","validationSchema","Yup","shape","department","trim","required","departmentMutate","useMutation","addDepartment","Dialog","fullWidth","maxWidth","onClose","tabIndex","DialogTitle","title","HouseSiding","initialValues","id","onSubmit","values","options","setSubmitting","mutateAsync","onSuccess","data","Swal","icon","iconColor","primary","main","text","confirmButtonColor","invalidateQueries","onError","v","error","cb","console","log","onSettled","formik","DialogContent","Stack","paddingTop","TextField","variant","label","size","value","onChange","handleChange","onBlur","handleBlur","touched","errors","helperText","DialogActions","LoadingButton","loading","isSubmitting","onClick","handleSubmit","sx","minWidth","Button","color","customDispatch","useContext","CustomContext","departmentData","useQuery","getAllDepartments","type","payload","useState","openAddDepartment","setOpenAddDepartment","Box","display","justifyContent","startIcon","Add","CustomTable","isLoading","heading","columns","departmentColumns","showResultsButton","refresh","refetch","customState","depart","setDepart","setDepartment","programme","setProgramme","useEffect","departOptions","departmentOptions","forEach","index","push","nullable","programmeMutate","addProgramme","enableReinitialize","rowGap","Autocomplete","disablePortal","e","renderInput","props","placeholder","Boolean","autoFocus","currentTarget","openAddProgramme","setOpenAddProgramme","programmeData","getAllProgrammes","programmeColumns","prog","setProg","code","setCode","course","setCourse","progOptions","programmeOptions","courseMutate","addCourse","ListAlt","courseData","getAllCourses","openAddCourse","setOpenAddCourse","courseColumns","createSvgIcon","_jsx","d","React","tab","setTab","Helmet","className","Content","Typography","Breadcrumbs","Link","Divider","TabContext","TabList","newtab","centered","Tab","House","iconPosition","CodeSharp","CalendarTodaySharp","TabPanel"],"sourceRoot":""}