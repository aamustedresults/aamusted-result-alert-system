{"version":3,"file":"static/js/134.c81bb590.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/DisabledByDefaultSharp.js","pages/Register.js","../node_modules/@mui/icons-material/esm/DeleteSharp.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 3v18h18V3H3zm14 12.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'DisabledByDefaultSharp');","import React, { useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Breadcrumbs,\r\n  Box,\r\n  Divider,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  MenuItem,\r\n  Alert,\r\n  Stack,\r\n  Chip,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { Formik } from \"formik\";\r\nimport { string, object, ref } from \"yup\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem as ReachMenuItem,\r\n  MenuList,\r\n} from \"@reach/menu-button\";\r\nimport {\r\n  DeleteSharp,\r\n  DisabledByDefaultSharp,\r\n  Edit,\r\n  MoreVertSharp,\r\n  RefreshSharp,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  addUser,\r\n  disableUserAccount,\r\n  getUsers,\r\n} from \"../components/api/userApi\";\r\n\r\nimport Content from \"../components/Content\";\r\nimport { tableIcons } from \"../assets/tableIcons\";\r\n// import Swal from \"sweetalert2\";\r\n\r\nfunction Register() {\r\n  const queryClient = useQueryClient();\r\n  const [registerMessage, setRegisterMessage] = useState({\r\n    severity: \"\",\r\n    msg: \"\",\r\n  });\r\n\r\n  const [showBtn, setShowBtn] = useState(true);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleCancelClick = () => {\r\n    setShowBtn(true);\r\n    setUsername(\"\");\r\n    setEmail(\"\");\r\n    setRole(\"\");\r\n  };\r\n\r\n  //Get all users\r\n  const users = useQuery([\"users\"], getUsers, {\r\n    suspense: () => {\r\n      return <div>loading</div>;\r\n    },\r\n    select: (data) => {\r\n      return data.map((user) => {\r\n        return {\r\n          _id: user._id,\r\n          username: user.username,\r\n          role: user.role,\r\n          active: user.active,\r\n          createdAt: user.createdAt,\r\n        };\r\n      });\r\n    },\r\n  });\r\n\r\n  const initialValues = {\r\n    username,\r\n    email,\r\n    role,\r\n    password,\r\n    confirmPassword,\r\n  };\r\n  const validationSchema = object().shape({\r\n    username: string().trim().required(),\r\n    email: string().trim().required().email(),\r\n    password: string()\r\n      .trim()\r\n      .required()\r\n      .min(8, \"Password Should be at least 8 characters long\"),\r\n    confirmPassword: string()\r\n      .trim()\r\n      .required()\r\n      .oneOf([ref(\"password\"), null], \"Passwords do not match\"),\r\n  });\r\n\r\n  const userMutate = useMutation(addUser);\r\n  const onSubmit = (values, options) => {\r\n    delete values.confirmPassword;\r\n    userMutate.mutateAsync(values, {\r\n      onSettled: () => {\r\n        options.setSubmitting(false);\r\n      },\r\n      onSuccess: async (data) => {\r\n        if (data) {\r\n          // Swal.fire({\r\n          //   icon: \"success\",\r\n          //   title: \"Success\",\r\n          //   text: \"User added\",\r\n          // });\r\n\r\n          setRegisterMessage({\r\n            severity: \"success\",\r\n            msg: \"New User Added!!!\",\r\n          });\r\n          options.resetForm();\r\n        }\r\n      },\r\n      onError: (error) => {\r\n        setRegisterMessage({\r\n          severity: \"error\",\r\n          msg: error,\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleCloseAlertMessage = () => {\r\n    setRegisterMessage({\r\n      severity: \"\",\r\n      msg: \"\",\r\n    });\r\n  };\r\n\r\n  const disableUserAccountMutate = useMutation(disableUserAccount);\r\n  const handleDisableAccount = (rowData) => {\r\n    const data = {\r\n      id: rowData._id,\r\n      active: !rowData.active,\r\n    };\r\n\r\n    disableUserAccountMutate.mutateAsync(data, {\r\n      onSettled: () => {\r\n        queryClient.invalidateQueries(\"user\");\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.invalidateQueries(\"user\");\r\n        alert(data);\r\n      },\r\n      onError: (error) => {\r\n        //error);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>AAMUSTED Results System | Register</title>\r\n      </Helmet>\r\n\r\n      <section className=\"register-user-container\">\r\n        <Content>\r\n          <Typography variant=\"h5\">Register New User</Typography>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Breadcrumbs>\r\n              <Link to=\"register\">Home</Link>\r\n              <Typography>Register</Typography>\r\n            </Breadcrumbs>\r\n          </Box>\r\n          <Divider sx={{ marginBottom: 2 }} />\r\n          {registerMessage.msg && (\r\n            <Alert\r\n              severity={registerMessage.severity}\r\n              onClose={handleCloseAlertMessage}\r\n            >\r\n              {registerMessage.msg}\r\n            </Alert>\r\n          )}\r\n          <Box\r\n            sx={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: { xs: \"column\", md: \"row\" },\r\n              justifyContent: { xs: \"center\", md: \"space-between\" },\r\n              alignItems: { xs: \"center\", md: \"stretch\" },\r\n              gap: { xs: 2, md: 6 },\r\n            }}\r\n          >\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onSubmit}\r\n              enableReinitialize={true}\r\n            >\r\n              {({ errors, touched, handleSubmit, isSubmitting }) => (\r\n                <Paper\r\n                  sx={{\r\n                    width: 300,\r\n                    borderTop: `solid 2px #5aa7a7`,\r\n                    paddingX: 2,\r\n                    paddingY: 1,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    gap: 3,\r\n                    boxShadow: `0px 0px 13px 0px rgb(82 63 105 / 10%)`,\r\n                    borderRadius: \"10px\",\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    variant=\"filled\"\r\n                    label=\"Username\"\r\n                    placeholder=\"Enter Username here\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    error={Boolean(touched.username && errors.username)}\r\n                    helperText={errors.username && errors.username}\r\n                  />\r\n                  <TextField\r\n                    type=\"email\"\r\n                    variant=\"filled\"\r\n                    label=\"Email Address\"\r\n                    placeholder=\"Enter email address here\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    helperText={errors.email && errors.email}\r\n                  />\r\n\r\n                  <TextField\r\n                    select\r\n                    variant=\"filled\"\r\n                    label=\"Select Role\"\r\n                    placeholder=\"Role\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    value={role}\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                    error={Boolean(touched.role && errors.role)}\r\n                    helperText={errors.role && errors.role}\r\n                  >\r\n                    <MenuItem value=\"administrator\">Administrator</MenuItem>\r\n                    {/* <MenuItem value=\"tutor\">Tutor</MenuItem>\r\n                      <MenuItem value=\"student\">Student</MenuItem> */}\r\n                  </TextField>\r\n                  {showBtn ? (\r\n                    <>\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        placeholder=\"Enter Password here\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        helperText={errors.password && errors.password}\r\n                      />\r\n\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"password\"\r\n                        label=\"Confirm Password\"\r\n                        placeholder=\"Enter Password here\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        error={Boolean(\r\n                          touched.confirmPassword && errors.confirmPassword\r\n                        )}\r\n                        helperText={\r\n                          errors.confirmPassword && errors.confirmPassword\r\n                        }\r\n                      />\r\n\r\n                      <LoadingButton\r\n                        loading={isSubmitting}\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        Register\r\n                      </LoadingButton>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <LoadingButton\r\n                        loading={isSubmitting}\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        Save Changes\r\n                      </LoadingButton>\r\n\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        onClick={handleCancelClick}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                </Paper>\r\n              )}\r\n            </Formik>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Users\"\r\n                data={users.data ? users.data : []}\r\n                columns={[\r\n                  {\r\n                    title: \"ID\",\r\n                    field: \"_id\",\r\n                    hidden: true,\r\n                  },\r\n                  {\r\n                    title: \"Username\",\r\n                    field: \"username\",\r\n                  },\r\n                  {\r\n                    title: \"Role\",\r\n                    field: \"role\",\r\n                  },\r\n                  {\r\n                    title: \"Account Status\",\r\n                    field: \"active\",\r\n                    render: (rowData) => (\r\n                      <Chip\r\n                        size=\"small\"\r\n                        label={rowData.active ? \"Active\" : \"Disabled\"}\r\n                        color={rowData.active ? \"success\" : \"error\"}\r\n                      />\r\n                    ),\r\n                  },\r\n\r\n                  {\r\n                    title: \"Options\",\r\n                    sorting: false,\r\n                    render: (rowData) => {\r\n                      return (\r\n                        <Menu>\r\n                          <MenuButton\r\n                            style={{\r\n                              backgroundColor: \"transparent\",\r\n                              outline: \"none\",\r\n                              border: \"none\",\r\n                            }}\r\n                          >\r\n                            <MoreVertSharp />\r\n                          </MenuButton>\r\n                          <MenuList\r\n                            style={{\r\n                              zIndex: \"100\",\r\n                            }}\r\n                          >\r\n                            <ReachMenuItem\r\n                              onSelect={() => handleDisableAccount(rowData)}\r\n                            >\r\n                              <DisabledByDefaultSharp fontSize=\"32px\" />\r\n                              <span>\r\n                                {rowData.active === true\r\n                                  ? \"Disable Account\"\r\n                                  : \"Enable Account\"}\r\n                              </span>\r\n                            </ReachMenuItem>\r\n                            <ReachMenuItem\r\n                              onSelect={() => {\r\n                                setShowBtn(false);\r\n                                // console.log(rowData);\r\n                                setUsername(rowData.username);\r\n                                setEmail(rowData.email);\r\n                                setRole(rowData.role);\r\n                              }}\r\n                            >\r\n                              <Stack direction=\"row\">\r\n                                <Edit fontSize=\"32px\" />\r\n                                <span>Edit</span>\r\n                              </Stack>\r\n                            </ReachMenuItem>\r\n\r\n                            <ReachMenuItem\r\n                              onSelect={() => {\r\n                                console.log(\"deleted\");\r\n                              }}\r\n                            >\r\n                              <DeleteSharp fontSize=\"32px\" />\r\n                              <span>Delete</span>\r\n                            </ReachMenuItem>\r\n                          </MenuList>\r\n                        </Menu>\r\n                      );\r\n                    },\r\n                  },\r\n                ]}\r\n                isLoading={users.isLoading}\r\n                style={{\r\n                  borderTop: `solid 2px #5aa7a7`,\r\n                  fontSize: \"13px\",\r\n                  boxShadow: `0px 0px 13px 0px rgb(82 63 105 / 10%)`,\r\n                  borderRadius: \"10px\",\r\n                }}\r\n                actions={[\r\n                  {\r\n                    position: \"toolbar\",\r\n                    tooltip: \"Refresh\",\r\n                    icon: () => <RefreshSharp />,\r\n\r\n                    isFreeAction: true,\r\n                    onClick: () => {\r\n                      users.refetch();\r\n                    },\r\n                  },\r\n                ]}\r\n                options={{\r\n                  pageSizeOptions: [5, 10, 20, 50, 100],\r\n                  selection: true,\r\n                  exportButton: true,\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Content>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');"],"names":["createSvgIcon","_jsx","d","queryClient","useQueryClient","useState","severity","msg","registerMessage","setRegisterMessage","showBtn","setShowBtn","username","setUsername","role","setRole","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleCancelClick","users","useQuery","getUsers","suspense","select","data","map","user","_id","active","createdAt","initialValues","validationSchema","object","shape","string","trim","required","min","oneOf","ref","userMutate","useMutation","addUser","disableUserAccountMutate","disableUserAccount","Helmet","className","Content","Typography","variant","Box","sx","display","justifyContent","Breadcrumbs","to","Divider","marginBottom","Alert","onClose","width","flexDirection","xs","md","alignItems","gap","onSubmit","values","options","mutateAsync","onSettled","setSubmitting","onSuccess","resetForm","onError","error","enableReinitialize","errors","touched","handleSubmit","isSubmitting","Paper","borderTop","paddingX","paddingY","boxShadow","borderRadius","TextField","label","placeholder","fullWidth","size","value","onChange","e","target","Boolean","helperText","type","MenuItem","LoadingButton","loading","onClick","Button","color","flexGrow","icons","tableIcons","title","columns","field","hidden","render","rowData","Chip","sorting","style","backgroundColor","outline","border","MoreVertSharp","zIndex","onSelect","id","invalidateQueries","alert","handleDisableAccount","DisabledByDefaultSharp","fontSize","Stack","direction","Edit","console","log","DeleteSharp","isLoading","actions","position","tooltip","icon","RefreshSharp","isFreeAction","refetch","pageSizeOptions","selection","exportButton"],"sourceRoot":""}